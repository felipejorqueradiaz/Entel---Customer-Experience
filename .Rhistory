'APROBADO AUTOMATICO' = 'APROBADO',
'APROBADO DESPUES DE ESTUDIO' = 'APROBADO',
'APROBADO FORZADO' = 'APROBADO',
'APROBADO TRATAMIENTO MANUAL' = 'APROBADO',
'ANULADO POR JEFE' = 'ANULADO',
'ANULADO AUTOMÁTICO' = 'ANULADO',
'CURSADO' = 'ANULADO',
'EN ESTUDIO' = 'EN CURSO',
'EN NEGOCIACISN' = 'EN CURSO'),
RECLAMO_COM = 1)
rfijo_comercial <- dummy_cols(rfijo_comercial, select_columns = 'RESOLUCION',
remove_selected_columns = TRUE)
rfijo_comercial <- rfijo_comercial %>%
mutate(ESPERA_COM = as.numeric(FECHA_DE_CIERRE - MES)) %>%
select(-c(FECHA_DE_CIERRE)) %>%
mutate(MES = format(MES, '%Y%m'))
#Fecha a formato fecha
rfijo_tec$`Reported Date` <- as.Date(rfijo_tec$`Reported Date`, format = '%d/%m/%Y')
rfijo_tec$`Closed Date` <- as.Date(rfijo_tec$`Closed Date`, format = '%d/%m/%Y')
rfijo_tec <- rfijo_tec %>%
select(-c(DR_ExtremoA, Responsabilidad_Falla, Segmento, Producto)) %>%
rename(MES = `Reported Date`, SEGMENTO = `CategorÃ­a Cliente`) %>%
mutate(SEGMENTO = recode(SEGMENTO,
'GRAN CUENTA' = 'GRANDES CUENTAS',
'EMPRESA' = 'EMPRESAS',
'PEQUEÑA' = 'PEQUEÑAS',
'MEDIANA' = 'MEDIANAS'),
RECLAMO_TEC = 1,
ESPERA_TEC = as.numeric(`Closed Date` - MES)) %>%
select(-c(`Closed Date`)) %>%
mutate(MES = format(MES, '%Y%m'))
facturacion_fijo <- facturacion_fijo %>%
select(encriptado, MES, SUBSEGMENTO_BSE, MONTO_NETO)
facturacion_fijo[facturacion_fijo == ''] <- NA
#Definimos la función Moda:
Moda <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
facturacion_segmento <- facturacion_fijo %>%
select(encriptado, SUBSEGMENTO_BSE) %>%
group_by(encriptado) %>%
summarise(SEG_FACT = Moda(SUBSEGMENTO_BSE))
churn_segmento <- churn_fijo %>%
select(c(encriptado, SEGMENTO)) %>%
group_by(encriptado) %>%
summarise(SEG_CHURN = Moda(SEGMENTO))
comercial_segmento <- rfijo_comercial %>%
select(c(encriptado, SEGMENTO)) %>%
group_by(encriptado) %>%
summarise(SEG_COM = Moda(SEGMENTO))
tecnico_segmento <- rfijo_tec %>%
select(c(encriptado, SEGMENTO)) %>%
group_by(encriptado) %>%
summarise(SEG_TEC = Moda(SEGMENTO))
segmentos <- merge(facturacion_segmento, churn_segmento, by='encriptado',
all.x = TRUE)
segmentos <- merge(segmentos, comercial_segmento, by='encriptado',
all.x = TRUE)
segmentos <- merge(segmentos, tecnico_segmento, by='encriptado',
all.x = TRUE)
segmentos <- segmentos %>%
mutate(final = SEG_FACT) %>%
mutate(final = ifelse(is.na(SEG_FACT), SEG_CHURN, SEG_FACT)) %>%
mutate(final = ifelse(is.na(final), SEG_CHURN, final)) %>%
mutate(final = ifelse(is.na(final), SEG_TEC, final)) %>%
mutate(final = ifelse(is.na(final), SEG_COM, final)) %>%
mutate(final = ifelse(is.na(final), 'S/I', final))
#Definimos el vector de fechas: el mes 1 es Enero-2019.
dates_levels <- seq(as.Date('2019-01-01'),as.Date('2021-12-01'), by="months")
dates_labels <- c(1:36)
#Facturaciones
facturacion_fijo$MES <- as.Date(paste(facturacion_fijo$MES,"01",sep=""), format='%Y%m%d')
facturacion_fijo$MES <- dates_labels[match(facturacion_fijo$MES,dates_levels)]
#Churn
churn_fijo$MES <- as.Date(paste(churn_fijo$MES,"01",sep=""), format='%Y%m%d')
churn_fijo$MES <- dates_labels[match(churn_fijo$MES,dates_levels)]
#Reclamo Comercial
rfijo_comercial$MES <- as.Date(paste(rfijo_comercial$MES,"01",sep=""), format='%Y%m%d')
rfijo_comercial$MES <- dates_labels[match(rfijo_comercial$MES,dates_levels)]
#Reclamo Tecnico
rfijo_tec$MES <- as.Date(paste(rfijo_tec$MES,"01",sep=""), format='%Y%m%d')
rfijo_tec$MES <- dates_labels[match(rfijo_tec$MES,dates_levels)]
#Agrupamos clientes por mes
facturacion_fijo <- facturacion_fijo %>%
select(encriptado, MES, MONTO_NETO) %>%
group_by(encriptado, MES) %>%
summarise(MONTO = sum(MONTO_NETO))
rfijo_comercial <- rfijo_comercial %>%
select(-c(SEGMENTO)) %>%
group_by(encriptado, MES) %>%
summarise_all(sum)
rfijo_comercial$ESPERA_COM_PROM <- rfijo_comercial$ESPERA_COM / rfijo_comercial$RECLAMO_COM
rfijo_tec <- rfijo_tec %>%
select(-c(SEGMENTO)) %>%
group_by(encriptado, MES) %>%
summarise_all(sum)
rfijo_tec$ESPERA_TEC_PROM = rfijo_tec$ESPERA_TEC / rfijo_tec$RECLAMO_TEC
data <- merge(facturacion_fijo, churn_fijo, by=c('encriptado', 'MES'), all.x = TRUE)
data <- merge(data, rfijo_comercial, by=c('encriptado', 'MES'), all.x = TRUE)
data <- merge(data, rfijo_tec, by=c('encriptado', 'MES'), all.x = TRUE)
seg_levels <- segmentos$encriptado
seg_labels <- segmentos$final
data$SEGMENTO <- seg_labels[match(data$encriptado,seg_levels)]
data[c("CHURN", "RECLAMO_COM", "RECLAMO_TEC")][is.na(data[c("CHURN", "RECLAMO_COM", "RECLAMO_TEC")])] <- 0
setwd("~/GitHub/2021-1/Entel---Customer-Experience")
write.table(data, file = "fijo_consolidado.txt", sep = "\t",
row.names = FALSE)
setwd("~/GitHub/2021-1/Entel---Customer-Experience")
data <- fread("fijo_consolidado.txt")
unique(data$DESC_MOVIMIENTO_ACCF)
data <- fread("fijo_consolidado.txt")
data <- data %>%
select(encriptado, MES, MONTO, RECLAMO_COM, RECLAMO_TEC, SEGMENTO, TIPO_TRABAJO) %>%
mutate(TIPO_TRABAJO = recode(TIPO_TRABAJO,
'Churn Voluntario' = 'Voluntario',
'Recuperados de Cobranza' = 'De Cobranza',
'Churn Involuntario ( Inhabilitados y Desactivados por Cobranza )' = 'Involuntario'))
model_logit <- glm(CHURN ~ .,
data = data,
family = binomial)
data <- fread("fijo_consolidado.txt")
data <- data %>%
select(encriptado, MES, MONTO, CHURN, RECLAMO_COM, RECLAMO_TEC, SEGMENTO, TIPO_TRABAJO) %>%
mutate(TIPO_TRABAJO = recode(TIPO_TRABAJO,
'Churn Voluntario' = 'Voluntario',
'Recuperados de Cobranza' = 'De Cobranza',
'Churn Involuntario ( Inhabilitados y Desactivados por Cobranza )' = 'Involuntario'))
model_logit <- glm(CHURN ~ .,
data = data,
family = binomial)
rm(list=ls())
setwd("~/GitHub/2021-1/Entel---Customer-Experience")
data <- fread("fijo_consolidado.txt")
data <- data %>%
select(encriptado, MES, MONTO, CHURN, RECLAMO_COM, RECLAMO_TEC, SEGMENTO, TIPO_TRABAJO) %>%
mutate(TIPO_TRABAJO = recode(TIPO_TRABAJO,
'Churn Voluntario' = 'Voluntario',
'Recuperados de Cobranza' = 'De Cobranza',
'Churn Involuntario ( Inhabilitados y Desactivados por Cobranza )' = 'Involuntario'))
model_logit <- glm(CHURN ~ .,
data = data,
family = binomial)
data2 <- data[2:ncol(data)]
model_logit <- glm(CHURN ~ .,
data = data,
family = binomial)
data2 <- data[,2:ncol(data)]
model_logit <- glm(CHURN ~ .,
data = data,
family = binomial)
model_logit <- glm(CHURN ~ .,
data = data2,
family = binomial)
summary(model_logit)
data2 <- data %>% select(-c(encriptado, TIPO_TRABAJO))
model_logit <- glm(CHURN ~ .,
data = data2,
family = binomial)
model_logit <- glm(CHURN ~ .,
data = data2,
family = binomial)
summary(model_logit)
rm(list=ls())
setwd("~/GitHub/2021-1/Entel---Customer-Experience")
data <- fread("fijo_consolidado.txt")
data <- data %>%
select(encriptado, MES, MONTO, CHURN, RECLAMO_COM, RECLAMO_TEC,
SEGMENTO, DESC_MOVIMIENTO_ACCF, TIPO_TRABAJO) %>%
mutate(DESC_MOVIMIENTO_ACCF = recode(DESC_MOVIMIENTO_ACCF,
'Churn Voluntario' = 'Voluntario',
'Recuperados de Cobranza' = 'De Cobranza',
'Churn Involuntario ( Inhabilitados y Desactivados por Cobranza )' = 'Involuntario'))
data2 <- data %>% select(-c(encriptado, TIPO_TRABAJO))
model_logit <- glm(CHURN ~ .,
data = data2,
family = binomial)
summary(model_logit)
data[c("DESC_MOVIMIENTO_ACCF")][is.na(data[c("DESC_MOVIMIENTO_ACCF")])] <- "No churn"
data <- data %>%
select(encriptado, MES, MONTO, CHURN, RECLAMO_COM, RECLAMO_TEC,
SEGMENTO, DESC_MOVIMIENTO_ACCF, TIPO_TRABAJO) %>%
mutate(DESC_MOVIMIENTO_ACCF = recode(DESC_MOVIMIENTO_ACCF,
'Churn Voluntario' = 'Voluntario',
'Recuperados de Cobranza' = 'De Cobranza',
'Churn Involuntario ( Inhabilitados y Desactivados por Cobranza )' = 'Involuntario'))
data[c("DESC_MOVIMIENTO_ACCF")][is.na(data[c("DESC_MOVIMIENTO_ACCF")])] <- "No churn"
data$DESC_MOVIMIENTO_ACCF[is.na(data$DESC_MOVIMIENTO_ACCF)] <- "No churn"
data2 <- data %>% select(-c(encriptado, TIPO_TRABAJO))
model_logit <- glm(CHURN ~ .,
data = data2,
family = binomial)
summary(model_logit)
data2 <- data %>% select(-c(encriptado, TIPO_TRABAJO, MONTO))
model_logit <- glm(CHURN ~ .,
data = data2,
family = binomial)
model_logit <- glm(CHURN ~ .,
data = data2,
family = binomial)
summary(model_logit)
data2 <- data %>% select(-c(encriptado, TIPO_TRABAJO, MONTO, DESC_MOVIMIENTO_ACCF))
model_logit <- glm(CHURN ~ .,
data = data2,
family = binomial)
model_logit <- glm(CHURN ~ .,
data = data2,
family = binomial)
summary(model_logit)
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'No churn' | DESC_MOVIMIENTO_ACCF == 'Voluntario') %>%
select(-c(encriptado, TIPO_TRABAJO, MONTO, DESC_MOVIMIENTO_ACCF))
data$com_sum <- ave(data$RECLAMO_COM, data$encriptado, FUN=cumsum)
data$tec_sum <- ave(data$RECLAMO_TEC, data$encriptado, FUN=cumsum)
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'No churn' | DESC_MOVIMIENTO_ACCF == 'Voluntario') %>%
select(-c(encriptado, TIPO_TRABAJO, MONTO, DESC_MOVIMIENTO_ACCF))
model_logit <- glm(CHURN ~ .,
data = data2,
family = binomial)
summary(model_logit)
data <- fread("fijo_consolidado.txt")
data$DESC_MOVIMIENTO_ACCF[is.na(data$DESC_MOVIMIENTO_ACCF)] <- "No churn"
data <- data %>% group_by(encriptado) %>%
mutate(csum = cumsum(RECLAMO_COM)) %>%
ungroup()
data <- fread("fijo_consolidado.txt")
data <- data %>%
select(encriptado, MES, MONTO, CHURN, RECLAMO_COM, RECLAMO_TEC,
SEGMENTO, DESC_MOVIMIENTO_ACCF, TIPO_TRABAJO) %>%
mutate(DESC_MOVIMIENTO_ACCF = recode(DESC_MOVIMIENTO_ACCF,
'Churn Voluntario' = 'Voluntario',
'Recuperados de Cobranza' = 'De Cobranza',
'Churn Involuntario ( Inhabilitados y Desactivados por Cobranza )' = 'Involuntario'))
data$DESC_MOVIMIENTO_ACCF[is.na(data$DESC_MOVIMIENTO_ACCF)] <- "No churn"
data <- data %>% group_by(encriptado) %>%
arrange(MES) %>%
mutate(csum = cumsum(RECLAMO_COM))
data <- fread("fijo_consolidado.txt")
data <- data %>%
group_by(encriptado) %>%
arrange(MES) %>%
mutate(csum = cumsum(RECLAMO_COM))
data <- data %>%
arrange(encriptado, MES) %>%
group_by(encriptado) %>%
arrange(MES) %>%
mutate(csum = cumsum(RECLAMO_COM))
rm(list=ls())
setwd("~/GitHub/2021-1/Entel---Customer-Experience")
data <- fread("fijo_consolidado.txt")
data <- data %>%
select(encriptado, MES, MONTO, CHURN, RECLAMO_COM, RECLAMO_TEC,
SEGMENTO, DESC_MOVIMIENTO_ACCF, TIPO_TRABAJO) %>%
mutate(DESC_MOVIMIENTO_ACCF = recode(DESC_MOVIMIENTO_ACCF,
'Churn Voluntario' = 'Voluntario',
'Recuperados de Cobranza' = 'De Cobranza',
'Churn Involuntario ( Inhabilitados y Desactivados por Cobranza )' = 'Involuntario'))
data$DESC_MOVIMIENTO_ACCF[is.na(data$DESC_MOVIMIENTO_ACCF)] <- "No churn"
data <- data %>%
arrange(encriptado, MES) %>%
group_by(encriptado) %>%
arrange(MES) %>%
mutate(csum = cumsum(RECLAMO_COM))
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'No churn' | DESC_MOVIMIENTO_ACCF == 'Voluntario') %>%
select(-c(encriptado, TIPO_TRABAJO, MONTO, DESC_MOVIMIENTO_ACCF))
model_logit <- glm(CHURN ~ .,
data = data2,
family = binomial)
```{r}
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'No churn' | DESC_MOVIMIENTO_ACCF == 'Voluntario') %>%
select(-c(encriptado, TIPO_TRABAJO, MONTO, DESC_MOVIMIENTO_ACCF))
rm(list=ls())
setwd("~/GitHub/2021-1/Entel---Customer-Experience")
data <- fread("fijo_consolidado.txt")
data <- data %>%
select(encriptado, MES, MONTO, CHURN, RECLAMO_COM, RECLAMO_TEC,
SEGMENTO, DESC_MOVIMIENTO_ACCF, TIPO_TRABAJO) %>%
mutate(DESC_MOVIMIENTO_ACCF = recode(DESC_MOVIMIENTO_ACCF,
'Churn Voluntario' = 'Voluntario',
'Recuperados de Cobranza' = 'De Cobranza',
'Churn Involuntario ( Inhabilitados y Desactivados por Cobranza )' = 'Involuntario'))
data$DESC_MOVIMIENTO_ACCF[is.na(data$DESC_MOVIMIENTO_ACCF)] <- "No churn"
data <- data %>%
arrange(encriptado, MES) %>%
group_by(encriptado) %>%
arrange(MES) %>%
mutate(csum = cumsum(RECLAMO_COM))
data <- data %>%
arrange(encriptado, MES) %>%
group_by(encriptado) %>%
mutate(csum = cumsum(RECLAMO_COM))
rm(list=ls())
setwd("~/GitHub/2021-1/Entel---Customer-Experience")
data <- fread("fijo_consolidado.txt")
data <- data %>%
select(encriptado, MES, MONTO, CHURN, RECLAMO_COM, RECLAMO_TEC,
SEGMENTO, DESC_MOVIMIENTO_ACCF, TIPO_TRABAJO) %>%
mutate(DESC_MOVIMIENTO_ACCF = recode(DESC_MOVIMIENTO_ACCF,
'Churn Voluntario' = 'Voluntario',
'Recuperados de Cobranza' = 'De Cobranza',
'Churn Involuntario ( Inhabilitados y Desactivados por Cobranza )' = 'Involuntario'))
data$DESC_MOVIMIENTO_ACCF[is.na(data$DESC_MOVIMIENTO_ACCF)] <- "No churn"
data <- data %>%
arrange(encriptado, MES) %>%
group_by(encriptado) %>%
mutate(csum = cumsum(RECLAMO_COM))
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'No churn' | DESC_MOVIMIENTO_ACCF == 'Voluntario') %>%
select(-c(encriptado, TIPO_TRABAJO, MONTO, DESC_MOVIMIENTO_ACCF))
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'No churn' | DESC_MOVIMIENTO_ACCF == 'Voluntario') %>%
select(-c(TIPO_TRABAJO, MONTO, DESC_MOVIMIENTO_ACCF))
model_logit <- glm(CHURN ~ .,
data = data2[,2:ncol(data2)],
family = binomial)
summary(model_logit)
install.packages("caTools")
library(caTools)
data3 <- data2[,2:ncol(data2)]
set.seed(123)
sample = sample.split(data3,SplitRatio = 0.75)
sample = sample.split(data3,SplitRatio = 0.75)
train1 =subset(data3,sample ==TRUE)
View(data3)
sample = sample.split(data3$CHURN,SplitRatio = 0.75)
train1 =subset(data3,sample ==TRUE)
test1=subset(data3, sample==FALSE)
model_logit <- glm(CHURN ~ .,
data = train1,
family = binomial)
summary(model_logit)
predict <- predict(model_logit, test1, type = 'response')
summary(predict)
table_mat <- table(test1$CHURN, predict > 0.5)
table_mat
rm(list=ls())
setwd("~/GitHub/2021-1/Entel---Customer-Experience")
data <- fread("fijo_consolidado.txt")
data <- data %>%
select(encriptado, MES, MONTO, CHURN, RECLAMO_COM, RECLAMO_TEC,
SEGMENTO, DESC_MOVIMIENTO_ACCF, TIPO_TRABAJO) %>%
mutate(DESC_MOVIMIENTO_ACCF = recode(DESC_MOVIMIENTO_ACCF,
'Churn Voluntario' = 'Voluntario',
'Recuperados de Cobranza' = 'De Cobranza',
'Churn Involuntario ( Inhabilitados y Desactivados por Cobranza )' = 'Involuntario'))
data$DESC_MOVIMIENTO_ACCF[is.na(data$DESC_MOVIMIENTO_ACCF)] <- "No churn"
data <- data %>%
arrange(encriptado, MES) %>%
group_by(encriptado) %>%
mutate(COM_sum = cumsum(RECLAMO_COM),
TEC_sum = cumsum(RECLAMO_TEC))
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'No churn' | DESC_MOVIMIENTO_ACCF == 'Voluntario') %>%
select(-c(TIPO_TRABAJO, MONTO, DESC_MOVIMIENTO_ACCF))
data3 <- data2[,2:ncol(data2)]
set.seed(123)
sample = sample.split(data3$CHURN,SplitRatio = 0.75)
train1 =subset(data3,sample ==TRUE)
test1=subset(data3, sample==FALSE)
model_logit <- glm(CHURN ~ .,
data = train1,
family = binomial)
summary(model_logit)
predict <- predict(model_logit, test1, type = 'response')
table_mat <- table(test1$CHURN, predict > 0.5)
table_mat
data3 <- data2 %>%
group_by(encriptado) %>%
summarise(tiempo = count(MES),
churns = sum(CHURN),
r_com = sum(RECLAMO_COM),
r_tec = sum(RECLAMO_TEC))
data3 <- data2 %>%
group_by(encriptado) %>%
summarise(tiempo = n(MES),
churns = sum(CHURN),
r_com = sum(RECLAMO_COM),
r_tec = sum(RECLAMO_TEC))
data3 <- data2 %>%
group_by(encriptado) %>%
summarise(tiempo = n(),
churns = sum(CHURN),
r_com = sum(RECLAMO_COM),
r_tec = sum(RECLAMO_TEC))
data3$BIN_CHURN[data3$CHURN >0] <- 1
data3$BIN_CHURN <- 0
data3$BIN_CHURN[data3$CHURN >0] <- 1
data3$BIN_CHURN[data3$churns >0] <- 1
data3 <- data3[,2:ncol(data3)]
sample = sample.split(data3$BIN_CHURN,SplitRatio = 0.75)
train1 =subset(data3,sample ==TRUE)
test1=subset(data3, sample==FALSE)
model_logit <- glm(BIN_CHURN ~ .,
data = train1,
family = binomial)
summary(model_logit)
predict <- predict(model_logit, test1, type = 'response')
table_mat <- table(test1$CHURN, predict > 0.5)
model_logit <- glm(BIN_CHURN ~ r_tec + r_com,
data = train1,
family = binomial)
summary(model_logit)
predict <- predict(model_logit, test1, type = 'response')
table_mat <- table(test1$CHURN, predict > 0.5)
table_mat
table_mat <- table(test1$CHURN, predict > 0.5)
table_mat <- table(test1$BIN_CHURN, predict > 0.5)
table_mat
model_logit <- glm(BIN_CHURN ~ r_tec + r_com + tiempo,
data = train1,
family = binomial)
summary(model_logit)
predict <- predict(model_logit, test1, type = 'response')
table_mat <- table(test1$BIN_CHURN, predict > 0.5)
table_mat
rm(list=ls())
setwd("~/GitHub/2021-1/Entel---Customer-Experience")
data <- fread("fijo_consolidado.txt")
data <- data %>%
select(encriptado, MES, MONTO, CHURN, RECLAMO_COM, RECLAMO_TEC,
SEGMENTO, DESC_MOVIMIENTO_ACCF, TIPO_TRABAJO) %>%
mutate(DESC_MOVIMIENTO_ACCF = recode(DESC_MOVIMIENTO_ACCF,
'Churn Voluntario' = 'Voluntario',
'Recuperados de Cobranza' = 'De Cobranza',
'Churn Involuntario ( Inhabilitados y Desactivados por Cobranza )' = 'Involuntario'))
data$DESC_MOVIMIENTO_ACCF[is.na(data$DESC_MOVIMIENTO_ACCF)] <- "No churn"
data <- data %>%
arrange(encriptado, MES) %>%
group_by(encriptado) %>%
mutate(COM_sum = cumsum(RECLAMO_COM),
TEC_sum = cumsum(RECLAMO_TEC),
Monto = mean(MONTO))
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'No churn' | DESC_MOVIMIENTO_ACCF == 'Voluntario') %>%
select(-c(TIPO_TRABAJO, MONTO, DESC_MOVIMIENTO_ACCF))
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'No churn' | DESC_MOVIMIENTO_ACCF == 'Voluntario') %>%
select(-c(TIPO_TRABAJO, MONTO, DESC_MOVIMIENTO_ACCF))
data3 <- data2 %>%
group_by(encriptado) %>%
summarise(tiempo = n(),
churns = sum(CHURN),
r_com = sum(RECLAMO_COM),
r_tec = sum(RECLAMO_TEC))
data3 <- data2 %>%
group_by(encriptado) %>%
summarise(tiempo = n(),
churns = sum(CHURN),
r_com = sum(RECLAMO_COM),
r_tec = sum(RECLAMO_TEC))
data3$BIN_CHURN <- 0
data3$BIN_CHURN <- 0
data3$BIN_CHURN[data3$churns >0] <- 1
data3 <- data3[,2:ncol(data3)]
sample = sample.split(data3$BIN_CHURN,SplitRatio = 0.75)
train1 =subset(data3,sample ==TRUE)
test1=subset(data3, sample==FALSE)
model_logit <- glm(BIN_CHURN ~ r_tec + r_com + tiempo,
data = train1,
family = binomial)
summary(model_logit)
predict <- predict(model_logit, test1, type = 'response')
table_mat <- table(test1$BIN_CHURN, predict > 0.5)
table_mat
model_logit <- glm(churns ~ r_tec + r_com + tiempo,
data = train1,
family = binomial)
sample = sample.split(data3$churns,SplitRatio = 0.75)
train1 =subset(data3,sample ==TRUE)
test1=subset(data3, sample==FALSE)
model_logit <- glm(churns ~ r_tec + r_com + tiempo,
data = train1,
family = binomial)
data3 <- data2 %>%
group_by(encriptado) %>%
summarise(tiempo = n(),
churns = sum(CHURN),
r_com = sum(RECLAMO_COM),
r_tec = sum(RECLAMO_TEC),
monto = mean(MONTO))
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'No churn' | DESC_MOVIMIENTO_ACCF == 'Voluntario') %>%
select(-c(TIPO_TRABAJO, DESC_MOVIMIENTO_ACCF))
data2 <- data %>%
filter(DESC_MOVIMIENTO_ACCF == 'No churn' | DESC_MOVIMIENTO_ACCF == 'Voluntario') %>%
select(-c(TIPO_TRABAJO, DESC_MOVIMIENTO_ACCF))
data3 <- data2 %>%
group_by(encriptado) %>%
summarise(tiempo = n(),
churns = sum(CHURN),
r_com = sum(RECLAMO_COM),
r_tec = sum(RECLAMO_TEC),
monto = mean(MONTO))
data3$BIN_CHURN <- 0
data3$BIN_CHURN[data3$churns >0] <- 1
data3 <- data3[,2:ncol(data3)]
sample = sample.split(data3$BIN_CHURN,SplitRatio = 0.75)
train1 =subset(data3,sample ==TRUE)
test1=subset(data3, sample==FALSE)
model_logit <- glm(churns ~ r_tec + r_com + tiempo + monto,
data = train1,
family = binomial)
model_logit <- glm(BIN_CHURN ~ r_tec + r_com + tiempo + monto,
data = train1,
family = binomial)
summary(model_logit)
predict <- predict(model_logit, test1, type = 'response')
table_mat <- table(test1$BIN_CHURN, predict > 0.5)
table_mat
