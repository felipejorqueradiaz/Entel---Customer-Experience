variaciones <- data.frame(Fecha, Promedio_Acum, Desv_Acum)
#return(variaciones)
return(data_t)
}
x2 <- variacion_mensual(data_1, data_2)
variacion_mensual <- function(data_t0, data_t1){
tiendas = c('Falabella', 'Paris', 'Ripley', 'Hites', 'La Polar')
#Calculamos el precio promedio por cada producto (Modelo) del mes t=0
t_0 <- data_t0 %>%
filter(Tienda %in% tiendas) %>%
group_by(Modelo) %>%
summarise(t_0 = mean(Precio.Normal))
#Calculamos el precio promedio por cada producto (Modelo) por dia del mes t=1
t_1 <- data_t1 %>%
filter(Tienda %in% tiendas) %>%
select(Modelo, Fecha, Tienda, Precio.Normal) %>%
group_by(Modelo, Fecha) %>%
summarise(Precio = mean(Precio.Normal)) %>%
spread(Fecha, Precio)
#Nos quedamos solo con aquellos productos de t=1 que están en t=0
data <- merge(t_0, t_1)
#Calculamos la variación porcentual
data[3:ncol(data)] <- ((data[3:ncol(data)] / data$t_0) - 1)*100
#Vector de fechas
Fecha <- colnames(data[3:ncol(data)])
#Media "acumulada"
data_t <- t(data[3:ncol(data)])
data_t2 <- rollapply(data_t, 100, mean, na.rm = TRUE, fill = NA,
align = 'right', partial = TRUE)
Promedio_Acum <- rowMeans(data_t2, na.rm = TRUE)
Desv_Acum <- rowSds(data_t2, na.rm = TRUE)
#A dataframe
variaciones <- data.frame(Fecha, Promedio_Acum, Desv_Acum)
#return(variaciones)
return(data_t2)
}
x3 <- variacion_mensual(data_1, data_2)
View(x3)
variacion_mensual <- function(data_t0, data_t1){
tiendas = c('Falabella', 'Paris', 'Ripley', 'Hites', 'La Polar')
#Calculamos el precio promedio por cada producto (Modelo) del mes t=0
t_0 <- data_t0 %>%
filter(Tienda %in% tiendas) %>%
group_by(Modelo) %>%
summarise(t_0 = mean(Precio.Normal))
#Calculamos el precio promedio por cada producto (Modelo) por dia del mes t=1
t_1 <- data_t1 %>%
filter(Tienda %in% tiendas) %>%
select(Modelo, Fecha, Tienda, Precio.Normal) %>%
group_by(Modelo, Fecha) %>%
summarise(Precio = mean(Precio.Normal)) %>%
spread(Fecha, Precio)
#Nos quedamos solo con aquellos productos de t=1 que están en t=0
data <- merge(t_0, t_1)
#Calculamos la variación porcentual
data[3:ncol(data)] <- ((data[3:ncol(data)] / data$t_0) - 1)*100
#Vector de fechas
Fecha <- colnames(data[3:ncol(data)])
#Transpuesta
data_t <- t(data[3:ncol(data)])
#Media "acumulada"
data_t2 <- rollapply(data_t, 100, mean, na.rm = TRUE, fill = NA,
align = 'right', partial = TRUE)
Promedio_Acum <- rowMeans(data_t2, na.rm = TRUE)
Desv_Acum <- rowSds(data_t2, na.rm = TRUE)
#Media diaria
Promedio <- rowMeans(data_t, na.rm = TRUE)
Desv <- rowSds(data_t, na.rm = TRUE)
#A dataframe
variaciones <- data.frame(Fecha, Promedio, Promedio_Acum, Desv, Desv_Acum)
return(variaciones)
}
x4 <- variacion_mensual(data_1, data_2)
View(x4)
variacion_mensual <- function(data_t0, data_t1){
tiendas = c('Falabella', 'Paris', 'Ripley', 'Hites', 'La Polar')
#Calculamos el precio promedio por cada producto (Modelo) del mes t=0
t_0 <- data_t0 %>%
filter(Tienda %in% tiendas) %>%
group_by(Modelo) %>%
summarise(t_0 = mean(Precio.Normal))
#Calculamos el precio promedio por cada producto (Modelo) por dia del mes t=1
t_1 <- data_t1 %>%
filter(Tienda %in% tiendas) %>%
select(Modelo, Fecha, Tienda, Precio.Normal) %>%
group_by(Modelo, Fecha) %>%
summarise(Precio = mean(Precio.Normal)) %>%
spread(Fecha, Precio)
#Nos quedamos solo con aquellos productos de t=1 que están en t=0
data <- merge(t_0, t_1)
#Calculamos la variación porcentual
data[3:ncol(data)] <- ((data[3:ncol(data)] / data$t_0) - 1)*100
#Vector de fechas
Fecha <- colnames(data[3:ncol(data)])
#Transpuesta
data_t <- t(data[3:ncol(data)])
#Media "acumulada"
data_t2 <- rollapply(data_t, 100, mean, na.rm = TRUE, fill = NA,
align = 'right', partial = TRUE)
Promedio_Acum <- rowMeans(data_t2, na.rm = TRUE)
#Desv_Acum <- rowSds(data_t2, na.rm = TRUE)
#Media diaria
Promedio <- rowMeans(data_t, na.rm = TRUE)
#Desv <- rowSds(data_t, na.rm = TRUE)
#A dataframe
variaciones <- data.frame(Fecha, Promedio, Promedio_Acum)
variaciones_long <- melt(variaciones, id.vars = c("Fecha"),
value.name="Promedio", variable.name="Tipo",)
return(variaciones_long)
}
x4 <- variacion_mensual(data_1, data_2)
ggplot(x4, aes(x=Fecha, y=Promedio, color=Tipo))+
geom_line()
View(x4)
ggplot(x4, aes(x=Fecha, y=Promedio, color=Tipo, group = 1))+
geom_line()
ggplot(x4, aes(x=Fecha, y=Promedio, color=Tipo, group = 2))+
geom_line()
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo))
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo), size=1)
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo), size=1)
knitr::opts_chunk$set(echo = FALSE)
#Importar datos
library(data.table)
#Manejar datos
library(dplyr)
library(tidyr)
library(reshape2)
library(matrixStats)
library(zoo)
#Graficos y diseño
library(ggplot2)
library(extrafont)
library(scales)
library(shadowtext)
#Tablas
library(sjPlot)
font_import()
loadfonts(device = "win")
cyg_theme <- function() {
theme(
# add border 1)
panel.border = element_rect(colour = "black", fill = NA, linetype = 1),
# color background 2)
panel.background = element_rect(fill = "white"),
# modify grid 3)
panel.grid.major.x = element_line(colour = "black", linetype = 3, size = 0.5),
panel.grid.minor.x = element_blank(),
panel.grid.major.y =  element_line(colour = "black", linetype = 3, size = 0.5),
panel.grid.minor.y = element_blank(),
# modify text, axis and colour 4) and 5)
axis.text = element_text(face = "bold",family = "Century Gothic"),
axis.title = element_text(face = 'bold',family = "Century Gothic"),
axis.ticks = element_line(),
plot.title = element_text(face = "bold",family = "Century Gothic",
hjust = 0.5),
# legend at the bottom 6)
legend.position = "bottom"
)
}
#path <- 'C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/TV'
#setwd(path)
data_1 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/TV/Abril-2021.csv')
data_2 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/TV/Mayo-2021.csv')
data_1 <- data_1[!grepl("+\\s+", data_1$Modelo),]
data_2 <- data_2[!grepl("+\\s+", data_2$Modelo),]
variacion_mensual <- function(data_t0, data_t1){
tiendas = c('Falabella', 'Paris', 'Ripley', 'Hites', 'La Polar')
#Calculamos el precio promedio por cada producto (Modelo) del mes t=0
t_0 <- data_t0 %>%
filter(Tienda %in% tiendas) %>%
group_by(Modelo) %>%
summarise(t_0 = mean(Precio.Normal))
#Calculamos el precio promedio por cada producto (Modelo) por dia del mes t=1
t_1 <- data_t1 %>%
filter(Tienda %in% tiendas) %>%
select(Modelo, Fecha, Tienda, Precio.Normal) %>%
group_by(Modelo, Fecha) %>%
summarise(Precio = mean(Precio.Normal)) %>%
spread(Fecha, Precio)
#Nos quedamos solo con aquellos productos de t=1 que están en t=0
data <- merge(t_0, t_1)
#Calculamos la variación porcentual
data[3:ncol(data)] <- ((data[3:ncol(data)] / data$t_0) - 1)*100
#Vector de fechas
Fecha <- colnames(data[3:ncol(data)])
#Transpuesta
data_t <- t(data[3:ncol(data)])
#Media "acumulada"
data_t2 <- rollapply(data_t, 100, mean, na.rm = TRUE, fill = NA,
align = 'right', partial = TRUE)
Promedio_Acum <- rowMeans(data_t2, na.rm = TRUE)
#Desv_Acum <- rowSds(data_t2, na.rm = TRUE)
#Media diaria
Promedio <- rowMeans(data_t, na.rm = TRUE)
#Desv <- rowSds(data_t, na.rm = TRUE)
#A dataframe
variaciones <- data.frame(Fecha, Promedio, Promedio_Acum)
variaciones_long <- melt(variaciones, id.vars = c("Fecha"),
value.name="Promedio", variable.name="Tipo",)
return(variaciones_long)
}
x4 <- variacion_mensual(data_1, data_2)
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo), size=1)
data_1 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/Celulares/Abril-2021.csv')
data_2 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/Celulares/Mayo-2021.csv')
data_1 <- data_1[!grepl("+\\s+", data_1$Modelo),]
data_2 <- data_2[!grepl("+\\s+", data_2$Modelo),]
x4 <- variacion_mensual(data_1, data_2)
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo), size=1)
x4 <- variacion_mensual(data_1, data_2)
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo), size=1)
data_1 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/TV/Abril-2021.csv')
data_2 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/TV/Mayo-2021.csv')
data_1 <- data_1[!grepl("+\\s+", data_1$Modelo),]
data_2 <- data_2[!grepl("+\\s+", data_2$Modelo),]
x4 <- variacion_mensual(data_1, data_2)
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo), size=1)
data_1 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/Celulares/Abril-2021.csv')
data_2 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/Celulares/Mayo-2021.csv')
data_1 <- data_1[!grepl("+\\s+", data_1$Modelo),]
data_2 <- data_2[!grepl("+\\s+", data_2$Modelo),]
x4 <- variacion_mensual(data_1, data_2)
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo), size=1)
View(data_1)
data_1 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/TV/Abril-2021.csv')
data_2 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/TV/Mayo-2021.csv')
#data_1 <- data_1[!grepl("+\\s+", data_1$Modelo),]
#data_2 <- data_2[!grepl("+\\s+", data_2$Modelo),]
x4 <- variacion_mensual(data_1, data_2)
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo), size=1)
data_1 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/Celulares/Abril-2021.csv')
data_2 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/Celulares/Mayo-2021.csv')
data_1 <- data_1[!grepl("+\\s+", data_1$Modelo),]
data_2 <- data_2[!grepl("+\\s+", data_2$Modelo),]
x4 <- variacion_mensual(data_1, data_2)
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo), size=1)
data_1 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/Celulares/Abril-2021.csv')
data_2 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/Celulares/Mayo-2021.csv')
#data_1 <- data_1[!grepl("+\\s+", data_1$Modelo),]
#data_2 <- data_2[!grepl("+\\s+", data_2$Modelo),]
x4 <- variacion_mensual(data_1, data_2)
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo), size=1)
View(x4)
data_1 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/Celulares/Abril-2021.csv')
data_2 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/Celulares/Mayo-2021.csv')
#data_1 <- data_1[!grepl("+\\s+", data_1$Modelo),]
#data_2 <- data_2[!grepl("+\\s+", data_2$Modelo),]
x4 <- variacion_mensual(data_1, data_2)
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo), size=1)
data_1 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/Impresora/Abril-2021.csv')
data_1 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/Impresoras/Abril-2021.csv')
data_2 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/Impresoras/Mayo-2021.csv')
#data_1 <- data_1[!grepl("+\\s+", data_1$Modelo),]
#data_2 <- data_2[!grepl("+\\s+", data_2$Modelo),]
x4 <- variacion_mensual(data_1, data_2)
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo), size=1)
View(data_1)
View(x4)
data_1 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/PC/Abril-2021.csv')
data_2 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/PC/Mayo-2021.csv')
#data_1 <- data_1[!grepl("+\\s+", data_1$Modelo),]
#data_2 <- data_2[!grepl("+\\s+", data_2$Modelo),]
x4 <- variacion_mensual(data_1, data_2)
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo), size=1)
data_1 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/RF/Abril-2021.csv')
data_2 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/RF/Mayo-2021.csv')
#data_1 <- data_1[!grepl("+\\s+", data_1$Modelo),]
#data_2 <- data_2[!grepl("+\\s+", data_2$Modelo),]
x4 <- variacion_mensual(data_1, data_2)
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo), size=1)
data_1 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/Impresoras/Abril-2021.csv')
data_2 <- read.csv('C:/Users/Felipe/Desktop/IPC_Bienes/Consolidados/Impresoras/Mayo-2021.csv')
#data_1 <- data_1[!grepl("+\\s+", data_1$Modelo),]
#data_2 <- data_2[!grepl("+\\s+", data_2$Modelo),]
x4 <- variacion_mensual(data_1, data_2)
ggplot(x4, aes(x=Fecha, y=Promedio))+
geom_line(aes(colour = Tipo, group = Tipo), size=1)
variacion_mensual <- function(data_t0, data_t1, fecha_corte){
tiendas = c('Falabella', 'Paris', 'Ripley', 'Hites', 'La Polar')
#Calculamos el precio promedio por cada producto (Modelo) del mes t=0
t_0 <- data_t0 %>%
filter(Tienda %in% tiendas, Fecha <= fecha_corte) %>%
group_by(Modelo) %>%
summarise(t_0 = mean(Precio.Normal))
#Calculamos el precio promedio por cada producto (Modelo) por dia del mes t=1
t_1 <- data_t1 %>%
filter(Tienda %in% tiendas) %>%
select(Modelo, Fecha, Tienda, Precio.Normal) %>%
group_by(Modelo, Fecha) %>%
summarise(Precio = mean(Precio.Normal)) %>%
spread(Fecha, Precio)
#Nos quedamos solo con aquellos productos de t=1 que están en t=0
data <- merge(t_0, t_1)
#Calculamos la variación porcentual
data[3:ncol(data)] <- ((data[3:ncol(data)] / data$t_0) - 1)*100
#Vector de fechas
Fecha <- colnames(data[3:ncol(data)])
#Transpuesta
data_t <- t(data[3:ncol(data)])
#Media "acumulada"
data_t2 <- rollapply(data_t, 100, mean, na.rm = TRUE, fill = NA,
align = 'right', partial = TRUE)
Promedio_Acum <- rowMeans(data_t2, na.rm = TRUE)
#Desv_Acum <- rowSds(data_t2, na.rm = TRUE)
#Media diaria
Promedio <- rowMeans(data_t, na.rm = TRUE)
#Desv <- rowSds(data_t, na.rm = TRUE)
#A dataframe
variaciones <- data.frame(Fecha, Promedio, Promedio_Acum)
variaciones_long <- melt(variaciones, id.vars = c("Fecha"),
value.name="Promedio", variable.name="Tipo",)
return(variaciones_long)
}
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(dplyr)
library(Hmisc)
library(ggplot2)
library(tidyr)
library(lubridate)
setwd("C:/Users/Felipe/Documents/GitHub/2021-1/Entel---Customer-Experience")
setwd("Data plana")
f1 <- fread("7Facturacion/Fijo/Fact Fijo 2019-1.txt")
f2 <- fread("7Facturacion/Fijo/Fact Fijo 2019-2.txt")
f3 <- fread("7Facturacion/Fijo/Fact Fijo 2019-3.txt")
f4 <- fread("7Facturacion/Fijo/Fact Fijo 2020-1.txt")
f5 <- fread("7Facturacion/Fijo/Fact Fijo 2020-2.txt")
facturacion_fijo <- rbind(f1, f2, f3, f4, f5)
churn_fijo <- fread("5Churn/Churn Fijo.txt")
View(churn_fijo)
View(facturacion_fijo)
churn_fijo2 <- churn_fijo %>%
select(c(encriptado, Mes, ID_ESTADO_FACTURACION_PMF,DESC_MOVIMIENTO_ACCF,
DESC_PRODUCTO_DEF, FACTURACION, TIPO_TRABAJO, FECHA_AR, FACT_CHURN_CODPRIN,
SEGMENTO, SEGMENTO_
))
View(churn_fijo2)
churn_fijo2 <- churn_fijo %>%
select(c(encriptado, Mes, ID_ESTADO_FACTURACION_PMF,DESC_MOVIMIENTO_ACCF,
DESC_PRODUCTO_DEF, FACTURACION, TIPO_TRABAJO, FECHA_AR, FACT_CHURN_CODPRIN,
SEGMENTO, SEGMENTO_)) %>%
rename(
MES = Mes,
PRODUCTO_CHURN = DESC_PRODUCTO_DEF) %>%
unif <- merge(facturacion_fijo, churn_fijo2, )
unique(facturacion_fijo$PRODUCTO)
churn_fijo2 <- churn_fijo %>%
select(c(encriptado, Mes, ID_ESTADO_FACTURACION_PMF,DESC_MOVIMIENTO_ACCF,
DESC_PRODUCTO_DEF, FACTURACION, TIPO_TRABAJO, FECHA_AR, FACT_CHURN_CODPRIN,
SEGMENTO, SEGMENTO_)) %>%
rename(
MES = Mes,
PRODUCTO = DESC_PRODUCTO_DEF) %>%
unif <- merge(facturacion_fijo, churn_fijo2, by=c(encriptado, MES, PRODUCTO))
churn_fijo2 <- churn_fijo %>%
select(c(encriptado, Mes, ID_ESTADO_FACTURACION_PMF,DESC_MOVIMIENTO_ACCF,
DESC_PRODUCTO_DEF, FACTURACION, TIPO_TRABAJO, FECHA_AR, FACT_CHURN_CODPRIN,
SEGMENTO, SEGMENTO_)) %>%
rename(
MES = Mes,
PRODUCTO = DESC_PRODUCTO_DEF) %>%
unif <- merge(facturacion_fijo, churn_fijo2, by=c('encriptado', 'MES', 'PRODUCTO'))
churn_fijo2 <- churn_fijo %>%
select(c(encriptado, Mes, ID_ESTADO_FACTURACION_PMF,DESC_MOVIMIENTO_ACCF,
DESC_PRODUCTO_DEF, FACTURACION, TIPO_TRABAJO, FECHA_AR, FACT_CHURN_CODPRIN,
SEGMENTO, SEGMENTO_)) %>%
rename(MES = Mes, PRODUCTO = DESC_PRODUCTO_DEF)
unif <- merge(facturacion_fijo, churn_fijo2, by=c('encriptado', 'MES', 'PRODUCTO'))
View(x4)
View(unif)
churn_fijo2 <- churn_fijo %>%
select(c(encriptado, Mes, ID_ESTADO_FACTURACION_PMF,DESC_MOVIMIENTO_ACCF,
DESC_PRODUCTO_DEF, FACTURACION, TIPO_TRABAJO, FECHA_AR, FACT_CHURN_CODPRIN,
SEGMENTO, SEGMENTO_)) %>%
rename(MES = Mes, PRODUCTO = DESC_PRODUCTO_DEF)
unif <- merge(facturacion_fijo, churn_fijo2,
by=c('encriptado', 'MES', 'PRODUCTO', all.x = TRUE))
churn_fijo2 <- churn_fijo %>%
select(c(encriptado, Mes, ID_ESTADO_FACTURACION_PMF,DESC_MOVIMIENTO_ACCF,
DESC_PRODUCTO_DEF, FACTURACION, TIPO_TRABAJO, FECHA_AR, FACT_CHURN_CODPRIN,
SEGMENTO, SEGMENTO_)) %>%
rename(MES = Mes, PRODUCTO = DESC_PRODUCTO_DEF)
unif <- merge(facturacion_fijo, churn_fijo2,
by=c('encriptado', 'MES', 'PRODUCTO'), all.x = TRUE)
View(facturacion_fijo)
column.names(factuacion_fijo)
column.names(facturacion_fijo)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(dplyr)
library(Hmisc)
library(ggplot2)
library(tidyr)
library(lubridate)
setwd("C:/Users/Felipe/Documents/GitHub/2021-1/Entel---Customer-Experience")
setwd("Data plana")
f1 <- fread("7Facturacion/Fijo/Fact Fijo 2019-1.txt")
f2 <- fread("7Facturacion/Fijo/Fact Fijo 2019-2.txt")
f3 <- fread("7Facturacion/Fijo/Fact Fijo 2019-3.txt")
f4 <- fread("7Facturacion/Fijo/Fact Fijo 2020-1.txt")
f5 <- fread("7Facturacion/Fijo/Fact Fijo 2020-2.txt")
facturacion_fijo <- rbind(f1, f2, f3, f4, f5)
churn_fijo <- fread("5Churn/Churn Fijo.txt")
setwd("C:/Users/Felipe/Documents/GitHub/2021-1/Entel---Customer-Experience")
setwd("Data plana")
f1 <- fread("7Facturacion/Fijo/Fact Fijo 2019-1.txt")
f2 <- fread("7Facturacion/Fijo/Fact Fijo 2019-2.txt")
f3 <- fread("7Facturacion/Fijo/Fact Fijo 2019-3.txt")
f4 <- fread("7Facturacion/Fijo/Fact Fijo 2020-1.txt")
f5 <- fread("7Facturacion/Fijo/Fact Fijo 2020-2.txt")
facturacion_fijo <- rbind(f1, f2, f3, f4, f5)
churn_fijo <- fread("5Churn/Churn Fijo.txt")
View(f1)
colnames(f1)
facturacion_d <- facturacion_fijo %>%
group_by(encriptado, MES, TIPO_DOCUMENTO,
DETALLE_TIPO_DOCUMENTO,PRODUCTO,SEGMENTO_BUN,
SUBSEGMENTO_BUN, SEGMENTO_BSE,
SUBSEGMENTO_BSE,MONTO_NETO) %>%
summarise(Monto = mean(MONTO_NETO))
unif <- merge(facturacion_d, churn_fijo2,
by=c('encriptado', 'MES', 'PRODUCTO'), all.x = TRUE)
churn_fijo2 <- churn_fijo %>%
select(c(encriptado, Mes, ID_ESTADO_FACTURACION_PMF,DESC_MOVIMIENTO_ACCF,
DESC_PRODUCTO_DEF, FACTURACION, TIPO_TRABAJO, FECHA_AR, FACT_CHURN_CODPRIN,
SEGMENTO, SEGMENTO_)) %>%
rename(MES = Mes, PRODUCTO = DESC_PRODUCTO_DEF)
unif <- merge(facturacion_d, churn_fijo2,
by=c('encriptado', 'MES', 'PRODUCTO'), all.x = TRUE)
churn_fijo2 <- churn_fijo %>%
select(c(encriptado, Mes, ID_ESTADO_FACTURACION_PMF,DESC_MOVIMIENTO_ACCF,
DESC_PRODUCTO_DEF, FACTURACION, TIPO_TRABAJO, FECHA_AR, FACT_CHURN_CODPRIN,
SEGMENTO, SEGMENTO_)) %>%
rename(MES = Mes, PRODUCTO = DESC_PRODUCTO_DEF) %>%
mutate(CHURN = 1)
unif <- merge(facturacion_d, churn_fijo2,
by=c('encriptado', 'MES', 'PRODUCTO'), all.x = TRUE)
head(unif, 5)
head(unif, 20)
head(unif[,c("SEGMENTO_BUN", "SEGMENTO_BSE", "SUBSEGMENTO_BUN", "SUBSEGMENTO_BSE",
"SEGMENTO", "SEGMENTO_")], 20)
head(unif[,c("SEGMENTO_BUN", "SEGMENTO_BSE", "SUBSEGMENTO_BUN", "SUBSEGMENTO_BSE",
"SEGMENTO", "SEGMENTO_")], 40)
head(unif[,c("SEGMENTO_BUN", "SEGMENTO_BSE", "SUBSEGMENTO_BUN", "SUBSEGMENTO_BSE",
"SEGMENTO", "SEGMENTO_")], 60)
unique(unif$SEGMENTO)
unique(unif$SEGMENTO_BUN)
unique(unif$SEGMENTO_BSE)
unique(unif$SUBSEGMENTO_BSE)
unique(unif$SUBSEGMENTO_BUN)
churn_fijo2[churn_fijo2$SEGMENTO == 'GRAN CUENTA'] <- 'GRANDES CUENTAS'
churn_fijo <- fread("5Churn/Churn Fijo.txt")
churn_fijo2 <- churn_fijo %>%
select(c(encriptado, Mes, ID_ESTADO_FACTURACION_PMF,DESC_MOVIMIENTO_ACCF,
DESC_PRODUCTO_DEF, FACTURACION, TIPO_TRABAJO, FECHA_AR, FACT_CHURN_CODPRIN,
SEGMENTO, SEGMENTO_)) %>%
rename(MES = Mes, PRODUCTO = DESC_PRODUCTO_DEF) %>%
mutate(CHURN = 1)
setwd("C:/Users/Felipe/Documents/GitHub/2021-1/Entel---Customer-Experience")
setwd("Data plana")
f1 <- fread("7Facturacion/Fijo/Fact Fijo 2019-1.txt")
f2 <- fread("7Facturacion/Fijo/Fact Fijo 2019-2.txt")
f3 <- fread("7Facturacion/Fijo/Fact Fijo 2019-3.txt")
f4 <- fread("7Facturacion/Fijo/Fact Fijo 2020-1.txt")
f5 <- fread("7Facturacion/Fijo/Fact Fijo 2020-2.txt")
facturacion_fijo <- rbind(f1, f2, f3, f4, f5)
churn_fijo <- fread("5Churn/Churn Fijo.txt")
churn_fijo2 <- churn_fijo %>%
select(c(encriptado, Mes, ID_ESTADO_FACTURACION_PMF,DESC_MOVIMIENTO_ACCF,
DESC_PRODUCTO_DEF, FACTURACION, TIPO_TRABAJO, FECHA_AR, FACT_CHURN_CODPRIN,
SEGMENTO, SEGMENTO_)) %>%
rename(MES = Mes, PRODUCTO = DESC_PRODUCTO_DEF) %>%
mutate(CHURN = 1)
churn_fijo2$SEGMENTO[churn_fijo2$SEGMENTO == 'GRAN CUENTA'] <- 'GRANDES CUENTAS'
unif <- merge(facturacion_d, churn_fijo2,
by=c('encriptado', 'MES', 'PRODUCTO'), all.x = TRUE)
rm(list = c("f1", "f2", "f3", "f4", "f5"))
unif <- merge(facturacion_d, churn_fijo2,
by=c('encriptado', 'MES', 'PRODUCTO'), all.x = TRUE)
rm(list = c("facturacion_d"))
rm(list = c("churn_fijo"))
unif <- merge(facturacion_d, churn_fijo2,
by=c('encriptado', 'MES', 'PRODUCTO'), all.x = TRUE)
facturacion_d <- facturacion_fijo %>%
group_by(encriptado, MES, TIPO_DOCUMENTO,
DETALLE_TIPO_DOCUMENTO,PRODUCTO,SEGMENTO_BUN,
SUBSEGMENTO_BUN, SEGMENTO_BSE,
SUBSEGMENTO_BSE,MONTO_NETO) %>%
summarise(Monto = mean(MONTO_NETO))
facturacion_d <- facturacion_fijo %>%
group_by(encriptado, MES, TIPO_DOCUMENTO,
DETALLE_TIPO_DOCUMENTO,PRODUCTO,SEGMENTO_BUN,
SUBSEGMENTO_BUN, SEGMENTO_BSE,
SUBSEGMENTO_BSE,MONTO_NETO) %>%
summarise(Monto = mean(MONTO_NETO))
rm(list = c("facturacion_fijo"))
